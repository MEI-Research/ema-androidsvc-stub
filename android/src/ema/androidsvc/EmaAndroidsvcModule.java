/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * TiDev Titanium Mobile
 * Copyright TiDev, Inc. 04/07/2022-Present
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ema.androidsvc;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;


@Kroll.module(name="EmaAndroidsvc", id="ema.androidsvc")
public class EmaAndroidsvcModule extends KrollModule
{
	// Standard Debugging variables
	private static final String LCAT = "EmaAndroidsvcModule";
	private static final boolean DBG = TiConfig.LOGD;

	public EmaAndroidsvcModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}

	//// Old "ti.myservice" Api

	@Kroll.getProperty
	public boolean getIsRunning()
	{
		return ForegroundService.isRunning();
	}

	@Kroll.getProperty
	public ServiceEventApi getServiceEventApi() {
		return ServiceEventApi.instance;
	}

	@Kroll.method
	public boolean start()
	{
		return ForegroundService.start();
	}

	@Kroll.method
	public void refresh() { ForegroundService.refresh();}

	@Kroll.method
	public void stop()
	{
		ForegroundService.stop();
	}

	@Kroll.method
	public void cancelNotification(int notificationId) { ForegroundService.cancelNotification(notificationId); }

	/** TODO: This bypasses the 64 scheduled notification limit!   Should not be used.*/
	@Kroll.method
	public void scheduleNotification(int index, String notificationId, String contentTitle, String contentText, int badge, long scheduleTime, long expireTime, String groupName) {
		//EMANotificationScheduler.scheduleNotification(notificationId,contentTitle,contentText,badge,scheduleTime,expireTime, groupName);
	}

	@Kroll.method
	public void startLocationDetection() {
		android.util.Log.d(LCAT, "startLocationDetection: REMOVED");
	}

	@Kroll.method
	public void startBackgroundLocationTracking() {
		android.util.Log.d(LCAT, "startBackgroundLocationTracking: REMOVED");
	}

}

